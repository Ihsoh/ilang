#include "test_inc.ir"

function _add_i64(n1:int64, n2:int64):int64 {
	vcall _print_int64("n1 = ", cast<int64>(100));
	vcall _print_int64("n2 = ", cast<int64>(200));

	var result:int64;
	add result, n1, n2;

	return result;
}

function _main():int32 {
	var result:int64;
	call result, _add_i64(cast<int64>(100), cast<int64>(200));

	vcall _print_int64("result = ", result);

	var a:int64;
	sub a, cast<int64>(1), cast<int64>(2);
	vcall _print_int64("a = ", a);

	var b:*int64;
	var c:*;
	assign b, cast<*int64>(24);
	sub b, b, 2;
	bitcast c, b;
	vcall _print_pointer("c = ", c);

	var d:*int8;
	var e:*;
	assign d, cast<*int8>(10);
	sub d, d, 4;
	bitcast e, d;
	vcall _print_pointer("e = ", e);

	var f:float;
	sub f, cast<float>(1.2), cast<float>(2.3);
	vcall _print_float("f = ", f);

	var g:double;
	sub g, cast<double>(22.22), cast<double>(12.21);
	vcall _print_double("g = ", g);

	return cast<int32>(0);
}
