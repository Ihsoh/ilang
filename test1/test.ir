#include "test_inc.ir"

function _add_i64(n1:int64, n2:int64):int64 {
	vcall _print_int64("n1 = ", n1);
	vcall _print_int64("n2 = ", n2);

	var result:int64;
	add result, n1, n2;

	return result;
}

struct A {
	var a:int64;
	var b:int64;
	var c:int64;
}

function _test() {
	vcall _print_int64("test = ", i64const 233333333);
}

function _get_func_ptr():*function() {
	return _test;
}

function _main():int32 {
	var result:int64;
	call result, _add_i64(cast<int64>(100), cast<int64>(200));

	vcall _print_int64("result = ", result);

	var fptr:*function();
	call fptr, _get_func_ptr();
	vcall fptr();

	return cast<int32>(0);
}
