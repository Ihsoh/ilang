#include "test_inc.ir"

function _add_i64(n1:int64, n2:int64):int64 {
	vcall _print_int64("n1 = ", cast<int64>(100));
	vcall _print_int64("n2 = ", cast<int64>(200));

	var result:int64;
	add result, n1, n2;

	return result;
}

struct A {
	var a:int64;
	var b:int64;
	var c:int64;
}

function _main():int32 {
	var result:int64;
	call result, _add_i64(cast<int64>(100), cast<int64>(200));

	vcall _print_int64("result = ", result);

	var ptr:*;

	var a:struct A;
	
	var b:*struct A;
	ref b, a;

	var a_a:*int64;
	mbr a_a, b, a;

	var a_b:*int64;
	mbr a_b, b, b;

	var a_c:*int64;
	mbr a_c, b, c;

	return cast<int32>(0);
}
