function malloc(sz:uint64):* dummy
function free(ptr:*) dummy
function printf(fmt:*char, ...) dummy

function test_1() {
	var sum:int32 = 0;
	var i:int32 = 0;
label _loop;
	i = i + 1;
	sum = sum + i;
	@_is_end = i >= 100;
	br _is_end, _end, _loop;
label _end;
	call printf("sum = %d\n", sum);
}

function test_2() {
	var a:int32 = 123;
	var b:*int32 = 0;
	var c:int32 = 0;
	b = &a;
	store b, 456
	c = load b;
}

function test_3() {
	var a:[2][3]int32;

	@_tmp_1 = &a;			// *[2][3]int32
	@_tmp_2 = @_tmp_1[0];	// *[3]int32
	@_tmp_3 = @_tmp_2[1];	// *int32
	store @_tmp_3, 123;
}

struct A {
	var a:int32;
	var b:int32;
}

function test_4() {
	var sa:struct A;
	
	@_tmp_1 = &sa;					// *struct A
	@_tmp_2 = @_tmp_1->a;			// *int32
	store @_tmp_2, 123;
	@_tmp_3 = @_tmp_1->b;			// *int32
	store @_tmp_3, 456;
}

struct B {
	var a:int32;
	var b:struct A;
}

function test_5() {
	var sb:struct B;

	@_tmp_1 = &sb;					// *struct B
	@_tmp_2 = @_tmp_1->a;			// *int32
	store @_tmp_2, 123;
	@_tmp_3 = @_tmp_1->b;			// *struct A
	@_tmp_4 = @_tmp_3->a;			// *int32
	store @_tmp_4, 456;
	@_tmp_5 = @_tmp_3->b;			// *int32
	store @_tmp_5, 789;
}

function main(argc:int32, argv:**char):int32 {
	call test_1();
	call test_2();
	call test_3();
	call test_4();

	return 0;
}
